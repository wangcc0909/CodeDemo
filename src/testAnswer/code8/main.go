package main

import (
	"net/http"
	"fmt"
	"github.com/PuerkitoBio/goquery"
	"io/ioutil"
	"bufio"
	"log"
	"encoding/json"
	"testAnswer/code8/model"
	"strings"
	"testAnswer/code8/config"
)

func main() {
	if config.ServerConfig.Env == "development" {
		log.Println("测试环境")
	}
	http.HandleFunc("/",handle)
	http.ListenAndServe(":8080",nil)
}

var urlString = "http://www.kugou.com/yy/rank/home/1-6666.html?from=rank"
func handle(w http.ResponseWriter, r *http.Request) {
	resp,err := http.Get(urlString)
	if err != nil {
		fmt.Println(err)
		return
	}
	defer resp.Body.Close()
	document,err := goquery.NewDocumentFromReader(resp.Body)
	if err != nil {
		fmt.Println(err)
		return
	}

	document.Find(".pc_temp_songname").Each(func(i int, selection *goquery.Selection) {
		songUri := handleUri(selection.Text())
		go crawleSong(songUri)
	})
}

func handleUri(u string) string {
	urlString := fmt.Sprintf("http://songsearch.kugou.com/song_search_v2?callback=jQuery1124006980366032059648_1518578518932&keyword=" +
		"%s&page=1&pagesize=30&userid=-1&clientver=&platform=WebFilter&tag=em&filter=2&iscorrection=1&privilege_filter=0&_=1518578518934",u)
	log.Println(urlString)
	return urlString
}

func crawleSong(songUri string) {
	resp,err := http.Get(songUri)
	if err != nil {
		fmt.Println(err)
		return
	}
	defer resp.Body.Close()
	result,err := ioutil.ReadAll(bufio.NewReader(resp.Body))
	l := string(result)
	n := strings.Index(l,"(")
	l = l[n+1:]
	l = l[:len(l)-2]
	//将这里做解析成json 到 struct
	var r model.AutoGenerated
	err = json.Unmarshal([]byte(l),&r)
	if err != nil {
		log.Println(err)
		fmt.Println(l)
		return
	}
	//将数据保存到数据库
	fmt.Println(r.Data.Lists[0].FileHash)
	crawlerSongInfo(r.Data.Lists[0].FileHash)
}

//http://www.kugou.com/yy/index.php?r=play/getdata&hash=8E5DDAC9C06A6469ED500F18985D56D6

func crawlerSongInfo(fileHash string) {
	songUrl := fmt.Sprintf("http://www.kugou.com/yy/index.php?r=play/getdata&hash=%s",fileHash)
	resp,err := http.Get(songUrl)
	if err != nil {
		fmt.Println(err)
		return
	}

	fmt.Println(songUrl)

	defer resp.Body.Close()
	result,err := ioutil.ReadAll(bufio.NewReader(resp.Body))
	var r model.SongInfo
	err = json.Unmarshal(result,&r)
	if err != nil {
		log.Println(err)
		return
	}
	fmt.Println(r.Data.PlayURL)
}


